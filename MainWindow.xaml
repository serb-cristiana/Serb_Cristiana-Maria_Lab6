<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Serb_Cristiana_Maria_Lab6"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="Serb_Cristiana_Maria_Lab6.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerOrdersViewSource" Source="{Binding Orders, Source={StaticResource customerViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Inventory}, CreateList=True}"/>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Height="382" VerticalAlignment="Top" Width="774" Margin="10,10,0,0">
            <TabItem Header="Customers">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerViewSource}">
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="218,29,134,219" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="222,212,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.468,0.478">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="0.126"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30.9"/>
                            <RowDefinition Height="1.1"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,1.9" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="custIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3.2,4,0,2.9" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3.2,0,0,4" Grid.Row="2" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Bottom" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="3" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3.2,4,0,4" Grid.Row="3" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button Name="btnNew" Content="New" HorizontalAlignment="Left" Margin="35,30,0,0" VerticalAlignment="Top" Width="75" Click="btnNew_Click" Height="20" Grid.ColumnSpan="2"/>
                    <Button Name="btnEdit" Content="Edit" HorizontalAlignment="Left" Margin="35,74,0,0" VerticalAlignment="Top" Width="75" Click="btnEdit_Click" Height="23"/>
                    <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" Margin="36,242,0,0" VerticalAlignment="Top" Width="76" Click="btnSave_Click" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" Margin="35,277,0,0" VerticalAlignment="Top" Width="75" Click="btnCancel_Click" Height="20" FontWeight="Bold"/>
                    <Button Name="btnPrevious" Content="Previous" HorizontalAlignment="Left" Margin="218,139,0,0" VerticalAlignment="Top" Width="75" Click="btnPrevious_Click" Height="20"/>
                    <Button Name="btnNext" Content="Next" HorizontalAlignment="Left" Margin="561,139,0,0" VerticalAlignment="Top" Width="75" Click="btnNext_Click" Height="20"/>
                    <Button x:Name="btnDelete" Content="Delete" HorizontalAlignment="Left" Margin="35,111,0,0" VerticalAlignment="Top" Width="75" Click="btnEdit_Click" Height="23"/>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource inventoryViewSource}">
                    <Button Name="btNew" Content="New" HorizontalAlignment="Left" Margin="35,30,0,0" VerticalAlignment="Top" Width="75" Click="btNew_Click" Height="20" Grid.ColumnSpan="2"/>
                    <Button Name="btEdit" Content="Edit" HorizontalAlignment="Left" Margin="35,74,0,0" VerticalAlignment="Top" Width="75" Click="btEdit_Click" Height="23"/>
                    <Button x:Name="btSave" Content="Save" HorizontalAlignment="Left" Margin="36,242,0,0" VerticalAlignment="Top" Width="76" Click="btSave_Click" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Name="btCancel" Content="Cancel" HorizontalAlignment="Left" Margin="35,277,0,0" VerticalAlignment="Top" Width="75" Click="btCancel_Click" Height="20" FontWeight="Bold"/>
                    <Button Name="btPrevious" Content="Previous" HorizontalAlignment="Left" Margin="202,167,0,0" VerticalAlignment="Top" Width="75" Click="btPrevious_Click" Height="20"/>
                    <Button Name="btNext" Content="Next" HorizontalAlignment="Left" Margin="545,167,0,0" VerticalAlignment="Top" Width="75" Click="btNext_Click" Height="20"/>
                    <Button x:Name="btDelete" Content="Delete" HorizontalAlignment="Left" Margin="35,111,0,0" VerticalAlignment="Top" Width="75" Click="btEdit_Click" Height="23"/>
                    <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="202,32,148.8,192.4" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn1" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" HorizontalAlignment="Left" Margin="206,212,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="carIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CarId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Orders">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerOrdersViewSource}">
                    <ComboBox x:Name="cmbCustomers" HorizontalAlignment="Left" Margin="159,75,0,0" VerticalAlignment="Top" Width="124" >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cmbInventory" HorizontalAlignment="Left" Margin="436,74,0,0" VerticalAlignment="Top" Width="120">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Make"/>
                                            <Binding Path="Color"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBox x:Name="txtInventory" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="Inventory" VerticalAlignment="Top" Width="120" Margin="436,46,0,0" AutomationProperties.Name="Inventory" Background="#FFE5E5E5"/>
                    <TextBox x:Name="txtCustomers" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="Customers" VerticalAlignment="Top" Width="124" Margin="159,46,0,0" AutomationProperties.Name="Customers" Background="#FFE5E5E5"/>
                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="159,201,181.8,35.4" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="custIdColumn1" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="orderIdColumn" Binding="{Binding OrderId}" Header="Order Id" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button Name="butonNew" Content="New" HorizontalAlignment="Left" Margin="35,30,0,0" VerticalAlignment="Top" Width="75" Click="butonNew_Click" Height="20" Grid.ColumnSpan="2"/>
                    <Button Name="butonEdit" Content="Edit" HorizontalAlignment="Left" Margin="35,74,0,0" VerticalAlignment="Top" Width="75" Click="butonEdit_Click" Height="23"/>
                    <Button Name="butonDelete" Content="Delete" HorizontalAlignment="Left" Margin="35,114,0,0" VerticalAlignment="Top" Width="75" Click="butonDelete_Click" Height="20"/>
                    <Button Name="butonSave" Content="Save" HorizontalAlignment="Left" Margin="35,248,0,0" VerticalAlignment="Top" Width="75" Click="butonSave_Click" Height="20" FontWeight="Bold"/>
                    <Button Name="butonCancel" Content="Cancel" HorizontalAlignment="Left" Margin="35,277,0,0" VerticalAlignment="Top" Width="75" Click="butonCancel_Click" Height="20" FontWeight="Bold"/>
                    <Button Name="butonPrevious" Content="Previous" HorizontalAlignment="Left" Margin="159,324,0,0" VerticalAlignment="Top" Width="75" Click="butonPrevious_Click" Height="20"/>
                    <Button Name="butonNext" Content="Next" HorizontalAlignment="Left" Margin="512,324,0,0" VerticalAlignment="Top" Width="75" Click="butonNext_Click" Height="20"/>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
